{"version":3,"file":"env.js","sources":["../electron/env.ts"],"sourcesContent":["import { join } from \"path\";\nimport { type, platform, tmpdir } from 'os'\n\n// Restituisce il percorso del file corrente.\nprocess.env.DIST_ELECTRON = join(__dirname, '..')\n\n// Restituisce il percorso del file corrente.\nprocess.env.DIST = join(process.env.DIST_ELECTRON, '../dist')\n\n// Restituisce il percorso del file corrente.\nprocess.env.PUBLIC = process.env.VITE_DEV_SERVER_URL\n  ? join(process.env.DIST_ELECTRON, '../public')\n  : process.env.DIST\n\n\n// Restituisce il nome del sistema operativo come 'Linux' on Linux, 'Darwin' on macOS, and 'Windows_NT' on Windows.\nprocess.env.TYPE = type()\n\n// Restituisce la directory predefinita del sistema operativo per i file temporanei come stringa.\nprocess.env.TEMP_DIR = tmpdir()\n\n// Restituisce una stringa che identifica la piattaforma del sistema operativo per la quale Ã¨ stato compilato il binario Node.js ['aix', 'darwin', 'freebsd','linux', 'openbsd', 'sunos', and 'win32']\nprocess.env.PLATFORM = platform()  "],"names":["join","type","tmpdir","platform"],"mappings":";;;AAIA,QAAQ,IAAI,gBAAgBA,KAAK,KAAA,WAAW,IAAI;AAGhD,QAAQ,IAAI,OAAOA,KAAA,KAAK,QAAQ,IAAI,eAAe,SAAS;AAG5D,QAAQ,IAAI,SAAS,QAAQ,IAAI,sBAC7BA,KAAA,KAAK,QAAQ,IAAI,eAAe,WAAW,IAC3C,QAAQ,IAAI;AAIhB,QAAQ,IAAI,OAAOC,GAAAA;AAGnB,QAAQ,IAAI,WAAWC,GAAAA;AAGvB,QAAQ,IAAI,WAAWC,YAAS;"}